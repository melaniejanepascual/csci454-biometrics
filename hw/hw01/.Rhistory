library(ggplot2)
# Read in plants.csv file
plants <- read.csv(file = "Plants.csv")
# Question 1: Compare fertilizer A and fertilizer B
fert.a <- plants$Fert = a
fert.b <- plants$Fert = b
table(fert.a, fert.b)
library(ggplot2)
# Read in plants.csv file
plants <- read.csv(file = "Plants.csv")
# Question 1: Compare fertilizer A and fertilizer B
fert.a <- plants$Fert = 'A'
fert.b <- plants$Fert = 'B'
table(fert.a, fert.b)
ggplot(data = plants, mapping = aes(x = species, y = biomasst2)) +
geom_boxplot()
?mean
biomass1 <- plants$BiomassT2 = '1'
biomass2 <- plants$BiomassT2 = '2'
biomass3 <- plants$BiomassT2 = '3'
mean(biomass1)
mean(biomass2)
mean(biomass3)
scores.matrix <- read.csv("hw1_matrix.csv")
scores.list <- read.csv("hw1_list.csv")
setwd("~/Developments/csci454-biometrics/hw01")
scores.matrix <- read.csv("hw1_matrix.csv")
scores.list <- read.csv("hw1_list.csv")
View(scores.list)
View(scores.matrix)
setwd("~/Developments/csci454-biometrics/hw01")
knitr::opts_chunk$set(echo = TRUE)
scores.matrix <- read.csv("hw1_matrix.csv")
scores.list <- read.csv("hw1_list.csv")
barplot(scores.matrix, xlab = "distance scores", ylab = "frequency")
?barplot
## Set up objects
scores.matrix <- read.csv("hw1_matrix.csv")
scores.list <- read.csv("hw1_list.csv")
barplot(scores.matrix, xlab = "distance scores", ylab = "frequency")
ggplot(diamonds, mapping = aes(price)) +
geom_histogram(data = d.diamonds, aes(price), fill ="red", alpha = .3) +
geom_histogram(data = j.diamonds, aes(price), fill ="blue", alpha = .3)
install.packages("ggplot2")
ggplot(diamonds, mapping = aes(price)) +
geom_histogram(data = d.diamonds, aes(price), fill ="red", alpha = .3) +
geom_histogram(data = j.diamonds, aes(price), fill ="blue", alpha = .3)
(ggplot2)
library(ggplot2)
ggplot(diamonds, mapping = aes(price)) +
geom_histogram(data = d.diamonds, aes(price), fill ="red", alpha = .3) +
geom_histogram(data = j.diamonds, aes(price), fill ="blue", alpha = .3)
d.diamonds <- subset(diamonds, color == "D")
j.diamonds <- subset(diamonds, color == "J")
ggplot(diamonds, mapping = aes(price)) +
geom_histogram(data = d.diamonds, aes(price), fill ="red", alpha = .3) +
geom_histogram(data = j.diamonds, aes(price), fill ="blue", alpha = .3)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
## Set up objects
scores <- read.table("hw1_list.csv")
View(scores)
View(scores)
## Set up objects
scores <- read.table("hw1_list.csv", header =TRUE)
## Set up objects
scores <- read.table("hw1_list.csv", header = TRUE)
View(scores)
View(scores)
## Set up objects
scores <- read.table("hw1_list.csv", sep = "," header = TRUE)
## Set up objects
scores <- read.table("hw1_list.csv", sep = "," header TRUE)
## Set up objects
scores <- read.table("hw1_list.csv", sep = "," header TRUE)
## Set up objects
scores <- read.table("hw1_list.csv", sep = "," header TRUE)
## Set up objects
scores <- read.table("hw1_matrix.csv")
View(scores)
View(scores)
## Set up objects
scores.matrix <- read.csv("hw1_matrix.csv")
scores.list <- read.csv("hw1_list.csv")
View(scores.list)
View(scores.list)
View(scores.matrix)
View(scores.matrix)
## Set up objects
scores <- read.csv("hw1_list.csv")
?subset
?mean
ggplot(scores, mapping = aes(score)) +
geom_histogram(data = genuine, aes(price), fill ="red", alpha = .3) +
geom_histogram(data = imposter, aes(price), fill ="blue", alpha = .3)
## ggplot(scores, mapping = aes(score)) +
##  geom_histogram(data = genuine, aes(price), fill ="red", ## alpha = .3) +
##  geom_histogram(data = imposter, aes(price), fill ="blue", alpha = .3)
imposter.graph <- dnorm(scores, mean = imposter.mean , sd = imposter.sd )
## Set up objects
scores <- read.csv("hw1_list.csv")
genuine <- c(genuine, 0.1)
ggplot(diamonds, mapping = aes(price)) +
geom_histogram(data = d.diamonds, aes(price), fill ="red", alpha = .3) +
geom_histogram(data = j.diamonds, aes(price), fill ="blue", alpha = .3)
library(ggplot2)
ggplot(diamonds, mapping = aes(price)) +
geom_histogram(data = d.diamonds, aes(price), fill ="red", alpha = .3) +
geom_histogram(data = j.diamonds, aes(price), fill ="blue", alpha = .3)
d.diamonds <- subset(diamonds, color == "D")
j.diamonds <- subset(diamonds, color == "J")
ggplot(diamonds, mapping = aes(price)) +
geom_histogram(data = d.diamonds, aes(price), fill ="red", alpha = .3) +
geom_histogram(data = j.diamonds, aes(price), fill ="blue", alpha = .3)
scores$Match <- subset(ifelse(substr(scores$sequence1, 1,6) == substr(scores$sequence2, 1,6),"Genuine", "Imposter"))
scores <- read.csv("hw1_list.csv")
scores <- read.csv("hw1_list.csv")
scores$Match <- subset(ifelse(substr(scores$sequence1, 1,6) == substr(scores$sequence2, 1,6),"Genuine", "Imposter"))
scores$Match <- ifelse(substr(scores$sequence1,1,6) == substr(scores$sequence2,1,6),"Genuine", "Imposter")
ggplot(scores, mapping = aes(score)) +
geom_histogram(data = scores, aes(scores$Match), fill ="red", alpha = .3) +
geom_histogram(data = scores, aes(scores$Match), fill ="blue", alpha = .3)
ggplot(scores, mapping = aes(scores$Match)) +
geom_histogram(data = scores, aes(scores$Match), fill ="red", alpha = .3) +
geom_histogram(data = scores, aes(scores$Match), fill ="blue", alpha = .3)
FARvsFRR <- data.frame(FRR, FAR)
GenuineDF <- subset(scores, Match == "Genuine")
ImposterDF <- subset(scores, Match == "Imposter")
FARvsFRR <- data.frame(FRR, FAR)
FARvsFRR <- data.frame(FRRc, FARc)
FARvsFRR <- data.frame(FRRc, FARc)
FARvsFRR <- data.frame(FRR, FAR)
scores <- read.csv("hw1_list.csv")
scores$Match <- ifelse(substr(scores$sequence1,1,6) == substr(scores$sequence2,1,6),"Genuine", "Imposter")
GenuineDF <- subset(scores, Match == "Genuine")
ImposterDF <- subset(scores, Match == "Imposter")
FARvsFRR <- data.frame(FRR, FAR)
for(d in seq(0.1, 0.9, 0.05)) {
FAR <- c(FRR, nrow(subset(GenuineDF, score > d))/nrow(GenuineDF))
}
FARvsFRR <- data.frame(FRRcoll, FARcoll)
for(d in seq(0.1, 0.9, 0.05)) {
FARcoll <- c(FARcoll, nrow(subset(GenuineDF, score > d))/nrow(GenuineDF))
}
## Set up objects
scores <- read.csv("hw1_list.csv")
scores$Match <- ifelse(substr(scores$sequence1,1,6) == substr(scores$sequence2,1,6),"Genuine", "Imposter")
GenuineDF <- subset(scores, Match == "Genuine")
ImposterDF <- subset(scores, Match == "Imposter")
FARvsFRR <- data.frame(FRRcoll, FARcoll)
for(d in seq(0.1, 0.9, 0.05)) {
FARcoll <- c(FARcoll, nrow(subset(GenuineDF, score > d))/nrow(GenuineDF))
}
FARvsFRR <- data.frame(FRRcoll, FARcoll)
FARvsFRR <- data.frame(FRRcoll, FARcoll)
## Set up objects
scores <- read.csv("hw1_list.csv")
scores$Match <- ifelse(substr(scores$sequence1,1,6) == substr(scores$sequence2,1,6),"Genuine", "Imposter")
plot(scores,type = "l",col = "blue",xlab = "Distance Scores",ylab = "Frequency")
plot(scores,type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency")
plot(scores$Match,type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency")
plot(scores$Match == "Genuine",type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency")
ggplot(scores, mapping = aes(scores$Match)) +
geom_histogram(data = scores, aes(scores$Match), fill ="red", alpha = .3) +
geom_histogram(data = scores, aes(scores$Match), fill ="blue", alpha = .3)
plot(scores$Match == "Genuine",type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency")
plot(scores$Match == "Imposter",type = "l", col = "red", xlab = "Distance Scores", ylab = "Frequency")
plot(genuine.scores, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency")
## Set up objects
scores <- read.csv("hw1_list.csv")
scores$Match <- ifelse(substr(scores$sequence1,1,6) == substr(scores$sequence2,1,6),"Genuine", "Imposter")
genuine.scores <- subset(scores, Match == "Genuine")
imposter.scores <- subset(scores, Match == "Imposter")
plot(genuine.scores, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency")
genuine.scores
plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency")
plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency")
plot(imposter.scores$score,type = "l", col = "red", xlab = "Distance Scores", ylab = "Frequency")
plot(genuine.scores$score, type = "o", col = "blue", xlab = "Distance Scores", ylab = "Frequency")
plot(imposter.scores$score,type = "o", col = "red", xlab = "Distance Scores", ylab = "Frequency")
plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
lines(imposter.scores$score,type = "l", col = "red")
genuine.sd <- sd(genuine.scores)
genuine.sd <- sd(genuine.scores$score)
imposter.sd <- sd(imposter.scores$score)
genuine.mean <- mean(genuine.scores$score)
imposter.mean <- mean(imposter.scores$score)
genuinee.scores$score
genuine.sd
(sqrt(2) * abs((genuine.mean)-(imposter.mean)))/sqrt((genuine.sd)+(imposter.sd))
genuine.sd <- sd(genuine.scores$score)
imposter.sd <- sd(imposter.scores$score)
genuine.mean <- mean(genuine.scores$score)
imposter.mean <- mean(imposter.scores$score)
dprime <- (sqrt(2) * abs((genuine.mean)-(imposter.mean)))/sqrt((genuine.sd)+(imposter.sd))
plot(imposter.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
lines(genuine.scores$score,type = "l", col = "red")
plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
lines(imposter.scores$score,type = "l", col = "red")
?hist
## plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
## lines(imposter.scores$score,type = "l", col = "red")
hist(genuine.scores, col = "red", main "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
## plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
## lines(imposter.scores$score,type = "l", col = "red")
hist(genuine.scores, col = "red", main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
## plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
## lines(imposter.scores$score,type = "l", col = "red")
hist(genuine.scores$score, col = "red", main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
hist(imposter.scores, col = "blue", add=T)
## plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
## lines(imposter.scores$score,type = "l", col = "red")
hist(genuine.scores$score, col = "red", main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
hist(imposter.scores$score, col = "blue", add = T)
box()
## plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
## lines(imposter.scores$score,type = "l", col = "red")
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T)
box()
## plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
## lines(imposter.scores$score,type = "l", col = "red")
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
hist(imposter.scores$score, col = rgb(0,0,1,0.5))
box()
## plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
## lines(imposter.scores$score,type = "l", col = "red")
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T)
box()
## plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
## lines(imposter.scores$score,type = "l", col = "red")
hist(imposter.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
hist(genuine.scores$score, col = rgb(0,0,1,0.5), add = T)
box()
## plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
## lines(imposter.scores$score,type = "l", col = "red")
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T)
box()
## plot(genuine.scores$score, type = "l", col = "blue", xlab = "Distance Scores", ylab = "Frequency", main = "Comparing imposter scores to genuine scores")
## lines(imposter.scores$score,type = "l", col = "red")
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T)
legend("topright", c("Germany", "Plastic"), fill=c("blue", "red"))
?legend
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T)
legend("top", c("Germany", "Plastic"), fill=c("blue", "red"))
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
# hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T)
legend("top", c("Germany", "Plastic"), fill=c("blue", "red"))
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
# hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T)
legend("top", c("Genuine", "Imposter"), fill=c(rgb(1,0,0,0.5), rbg(0,0,1,0.5)))
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
# hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T)
legend("top", c("Genuine", "Imposter"), fill=c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency")
hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T)
legend("top", c("Genuine", "Imposter"), fill=c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
FARvsFRR <- data.frame(FRR, FAR)
?hist
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency", freq = FALSE)
hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T)
legend("top", c("Genuine", "Imposter"), fill=c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency", freq = FALSE)
hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T, freq = FALSE)
legend("top", c("Genuine", "Imposter"), fill=c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
dprime
genuine.sd <- sd(genuine.scores$score)
imposter.sd <- sd(imposter.scores$score)
genuine.mean <- mean(genuine.scores$score)
imposter.mean <- mean(imposter.scores$score)
dprime <- (sqrt(2) * abs((imposter.mean)-(genuine.mean)))/sqrt((imposter.sd)+(genuine.sd))
dprime
dprime <- (sqrt(2) * abs((imposter.mean)-(genuine.mean)))/sqrt((imposter.sd)+(genuine.sd))
dprime
genuine.sd
imposter.sd
genuine.mean
imposter.mean
